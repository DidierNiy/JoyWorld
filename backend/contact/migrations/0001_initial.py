# Generated by Django 4.2.7 on 2025-07-30 18:45

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('message_type', models.CharField(choices=[('general', 'General Inquiry'), ('donation', 'Donation Inquiry'), ('volunteer', 'Volunteer Inquiry'), ('partnership', 'Partnership'), ('media', 'Media Inquiry'), ('complaint', 'Complaint'), ('other', 'Other')], default='general', max_length=20)),
                ('status', models.CharField(choices=[('new', 'New'), ('in_progress', 'In Progress'), ('resolved', 'Resolved'), ('closed', 'Closed')], default='new', max_length=20)),
                ('response_message', models.TextField(blank=True, null=True)),
                ('responded_by', models.CharField(blank=True, max_length=100, null=True)),
                ('responded_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('template_type', models.CharField(choices=[('donation_confirmation', 'Donation Confirmation'), ('donation_receipt', 'Donation Receipt'), ('volunteer_application_received', 'Volunteer Application Received'), ('volunteer_application_approved', 'Volunteer Application Approved'), ('volunteer_application_rejected', 'Volunteer Application Rejected'), ('contact_response', 'Contact Form Response'), ('newsletter', 'Newsletter'), ('campaign_update', 'Campaign Update'), ('general_notification', 'General Notification')], max_length=50, unique=True)),
                ('subject', models.CharField(max_length=200)),
                ('html_content', models.TextField(help_text='HTML content of the email')),
                ('text_content', models.TextField(blank=True, help_text='Plain text content of the email', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='NewsletterSubscriber',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('unsubscribed', 'Unsubscribed'), ('bounced', 'Bounced')], default='active', max_length=20)),
                ('subscribed_at', models.DateTimeField(auto_now_add=True)),
                ('unsubscribed_at', models.DateTimeField(blank=True, null=True)),
                ('unsubscribe_token', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('receive_donation_updates', models.BooleanField(default=True)),
                ('receive_volunteer_updates', models.BooleanField(default=True)),
                ('receive_general_updates', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['-subscribed_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('recipient_email', models.EmailField(max_length=254)),
                ('recipient_name', models.CharField(blank=True, max_length=100, null=True)),
                ('subject', models.CharField(max_length=200)),
                ('status', models.CharField(choices=[('sent', 'Sent'), ('failed', 'Failed'), ('bounced', 'Bounced'), ('opened', 'Opened'), ('clicked', 'Clicked')], default='sent', max_length=20)),
                ('provider', models.CharField(help_text='Email provider used (e.g., SendGrid, SMTP)', max_length=50)),
                ('provider_message_id', models.CharField(blank=True, max_length=100, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('opened_at', models.DateTimeField(blank=True, null=True)),
                ('clicked_at', models.DateTimeField(blank=True, null=True)),
                ('reference_type', models.CharField(blank=True, help_text='Type of related object (e.g., Donation, VolunteerApplication)', max_length=50, null=True)),
                ('reference_id', models.CharField(blank=True, help_text='ID of related object', max_length=100, null=True)),
                ('template_used', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contact.emailtemplate')),
            ],
            options={
                'ordering': ['-sent_at'],
            },
        ),
    ]
